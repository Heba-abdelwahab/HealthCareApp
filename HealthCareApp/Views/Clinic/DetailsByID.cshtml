@model HealthCareApp.ViewModel.Clinic.ClinicInfoVM

@{
    ViewData["Title"] = "DetailsByID";
}

<div>
    <h3>Clinic Info</h3>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Name)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Name)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.ClinicAddress)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.ClinicAddress)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.ClinicCity)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.ClinicCity)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.ClinicRegion)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.ClinicRegion)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.ClinicPhoneNumber)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.ClinicPhoneNumber)</dd>
    </dl>
</div>

<hr />
<h4>Clinic Location</h4>
<div id="map" style="height: 500px; width: 600px;" class="mb-3 bg-light border"></div>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id" asp-route-page="@ViewBag.CurrentPage">Edit</a> |
    <a asp-action="Index" asp-route-page="@ViewBag.CurrentPage">Back to List</a>
</div>

@section Scripts {
    <script>
        function initMap() {
            var lat = @Model.ClinicLocation.Y;
            var lng = @Model.ClinicLocation.X;

            var clinicLocation = new google.maps.LatLng(lat, lng);

            const map = new google.maps.Map(document.getElementById("map"), {
                center: clinicLocation,
                zoom: 14,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            const marker = new google.maps.Marker({
                position: clinicLocation,
                map: map,
                title: 'Clinic Location'
            });

            const infowindow = new google.maps.InfoWindow({
                content: `<div> <strong>Address:</strong> @Model.ClinicAddress<br/>
                                <strong>Region:</strong> @Model.ClinicRegion<br/>
                                <strong>City:</strong> @Model.ClinicCity
                           </div>`
            });

            marker.addListener("click", () => {
                infowindow.open(map, marker);
            });
        }
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=@Model.ClinicLocation.KeyId&callback=initMap" async defer></script>
}



